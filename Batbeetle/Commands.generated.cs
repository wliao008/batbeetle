namespace Batbeetle
{
    public static class Commands
    {
        //set
        public static readonly byte[] Sadd = new byte[] { 0x53, 0x41, 0x44, 0x44 };
        public static readonly byte[] Scard = new byte[] { 0x53, 0x43, 0x41, 0x52, 0x44 };
        public static readonly byte[] Sdiff = new byte[] { 0x53, 0x44, 0x49, 0x46, 0x46 };
        public static readonly byte[] Sdiffstore = new byte[] { 0x53, 0x44, 0x49, 0x46, 0x46, 0x53, 0x54, 0x4f, 0x52, 0x45 };
        public static readonly byte[] Sinter = new byte[] { 0x53, 0x49, 0x4e, 0x54, 0x45, 0x52 };
        public static readonly byte[] Sinterstore = new byte[] { 0x53, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x53, 0x54, 0x4f, 0x52, 0x45 };
        public static readonly byte[] Sismember = new byte[] { 0x53, 0x49, 0x53, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52 };
        public static readonly byte[] Smembers = new byte[] { 0x53, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53 };
        public static readonly byte[] Smove = new byte[] { 0x53, 0x4d, 0x4f, 0x56, 0x45 };
        public static readonly byte[] Spop = new byte[] { 0x53, 0x50, 0x4f, 0x50 };
        public static readonly byte[] Srandmember = new byte[] { 0x53, 0x52, 0x41, 0x4e, 0x44, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52 };
        public static readonly byte[] Srem = new byte[] { 0x53, 0x52, 0x45, 0x4d };
        public static readonly byte[] Sscan = new byte[] { 0x53, 0x53, 0x43, 0x41, 0x4e };
        public static readonly byte[] Sunion = new byte[] { 0x53, 0x55, 0x4e, 0x49, 0x4f, 0x4e };
        public static readonly byte[] Sunionstore = new byte[] { 0x53, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x53, 0x54, 0x4f, 0x52, 0x45 };
        //hash
        public static readonly byte[] Hdel = new byte[] { 0x48, 0x44, 0x45, 0x4c };
        public static readonly byte[] Hexists = new byte[] { 0x48, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53 };
        public static readonly byte[] Hget = new byte[] { 0x48, 0x47, 0x45, 0x54 };
        public static readonly byte[] Hgetall = new byte[] { 0x48, 0x47, 0x45, 0x54, 0x41, 0x4c, 0x4c };
        public static readonly byte[] Hincrby = new byte[] { 0x48, 0x49, 0x4e, 0x43, 0x52, 0x42, 0x59 };
        public static readonly byte[] Hincrbyfloat = new byte[] { 0x48, 0x49, 0x4e, 0x43, 0x52, 0x42, 0x59, 0x46, 0x4c, 0x4f, 0x41, 0x54 };
        public static readonly byte[] Hkeys = new byte[] { 0x48, 0x4b, 0x45, 0x59, 0x53 };
        public static readonly byte[] Hlen = new byte[] { 0x48, 0x4c, 0x45, 0x4e };
        public static readonly byte[] Hmget = new byte[] { 0x48, 0x4d, 0x47, 0x45, 0x54 };
        public static readonly byte[] Hmset = new byte[] { 0x48, 0x4d, 0x53, 0x45, 0x54 };
        public static readonly byte[] Hscan = new byte[] { 0x48, 0x53, 0x43, 0x41, 0x4e };
        public static readonly byte[] Hset = new byte[] { 0x48, 0x53, 0x45, 0x54 };
        public static readonly byte[] Hsetnx = new byte[] { 0x48, 0x53, 0x45, 0x54, 0x4e, 0x58 };
        public static readonly byte[] Hvals = new byte[] { 0x48, 0x56, 0x41, 0x4c, 0x53 };
        //string
        public static readonly byte[] Append = new byte[] { 0x41, 0x50, 0x50, 0x45, 0x4e, 0x44 };
        public static readonly byte[] Bitcount = new byte[] { 0x42, 0x49, 0x54, 0x43, 0x4f, 0x55, 0x4e, 0x54 };
        public static readonly byte[] Bitop = new byte[] { 0x42, 0x49, 0x54, 0x4f, 0x50 };
        public static readonly byte[] Decr = new byte[] { 0x44, 0x45, 0x43, 0x52 };
        public static readonly byte[] Decrby = new byte[] { 0x44, 0x45, 0x43, 0x52, 0x42, 0x59 };
        public static readonly byte[] Get = new byte[] { 0x47, 0x45, 0x54 };
        public static readonly byte[] Getbit = new byte[] { 0x47, 0x45, 0x54, 0x42, 0x49, 0x54 };
        public static readonly byte[] Getrange = new byte[] { 0x47, 0x45, 0x54, 0x52, 0x41, 0x4e, 0x47, 0x45 };
        public static readonly byte[] Getset = new byte[] { 0x47, 0x45, 0x54, 0x53, 0x45, 0x54 };
        public static readonly byte[] Incr = new byte[] { 0x49, 0x4e, 0x43, 0x52 };
        public static readonly byte[] Incrby = new byte[] { 0x49, 0x4e, 0x43, 0x52, 0x42, 0x59 };
        public static readonly byte[] Incrbyfloat = new byte[] { 0x49, 0x4e, 0x43, 0x52, 0x42, 0x59, 0x46, 0x4c, 0x4f, 0x41, 0x54 };
        public static readonly byte[] Mget = new byte[] { 0x4d, 0x47, 0x45, 0x54 };
        public static readonly byte[] Mset = new byte[] { 0x4d, 0x53, 0x45, 0x54 };
        public static readonly byte[] Msetnx = new byte[] { 0x4d, 0x53, 0x45, 0x54, 0x4e, 0x58 };
        public static readonly byte[] Psetex = new byte[] { 0x50, 0x53, 0x45, 0x54, 0x45, 0x58 };
        public static readonly byte[] Set = new byte[] { 0x53, 0x45, 0x54 };
        public static readonly byte[] Setbit = new byte[] { 0x53, 0x45, 0x54, 0x42, 0x49, 0x54 };
        public static readonly byte[] Setex = new byte[] { 0x53, 0x45, 0x54, 0x45, 0x58 };
        public static readonly byte[] Setnx = new byte[] { 0x53, 0x45, 0x54, 0x4e, 0x58 };
        public static readonly byte[] Setrange = new byte[] { 0x53, 0x45, 0x54, 0x52, 0x41, 0x4e, 0x47, 0x45 };
        public static readonly byte[] Strlen = new byte[] { 0x53, 0x54, 0x52, 0x4c, 0x45, 0x4e };
        //transactions
        public static readonly byte[] Discard = new byte[] { 0x44, 0x49, 0x53, 0x43, 0x41, 0x52, 0x44 };
        public static readonly byte[] Exec = new byte[] { 0x45, 0x58, 0x45, 0x43 };
        public static readonly byte[] Multi = new byte[] { 0x4d, 0x55, 0x4c, 0x54, 0x49 };
        public static readonly byte[] Unwatch = new byte[] { 0x55, 0x4e, 0x57, 0x41, 0x54, 0x43, 0x48 };
        public static readonly byte[] Watch = new byte[] { 0x57, 0x41, 0x54, 0x43, 0x48 };
        //generic
        public static readonly byte[] Del = new byte[] { 0x44, 0x45, 0x4c };
        public static readonly byte[] Dump = new byte[] { 0x44, 0x55, 0x4d, 0x50 };
        public static readonly byte[] Exists = new byte[] { 0x45, 0x58, 0x49, 0x53, 0x54, 0x53 };
        public static readonly byte[] Expire = new byte[] { 0x45, 0x58, 0x50, 0x49, 0x52, 0x45 };
        public static readonly byte[] Expireat = new byte[] { 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x41, 0x54 };
        public static readonly byte[] Keys = new byte[] { 0x4b, 0x45, 0x59, 0x53 };
        public static readonly byte[] Migrate = new byte[] { 0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x45 };
        public static readonly byte[] Move = new byte[] { 0x4d, 0x4f, 0x56, 0x45 };
        public static readonly byte[] Object = new byte[] { 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54 };
        public static readonly byte[] Persist = new byte[] { 0x50, 0x45, 0x52, 0x53, 0x49, 0x53, 0x54 };
        public static readonly byte[] Pexpire = new byte[] { 0x50, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45 };
        public static readonly byte[] Pexpireat = new byte[] { 0x50, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x41, 0x54 };
        public static readonly byte[] Pttl = new byte[] { 0x50, 0x54, 0x54, 0x4c };
        public static readonly byte[] Randomkey = new byte[] { 0x52, 0x41, 0x4e, 0x44, 0x4f, 0x4d, 0x4b, 0x45, 0x59 };
        public static readonly byte[] Rename = new byte[] { 0x52, 0x45, 0x4e, 0x41, 0x4d, 0x45 };
        public static readonly byte[] Renamenx = new byte[] { 0x52, 0x45, 0x4e, 0x41, 0x4d, 0x45, 0x4e, 0x58 };
        public static readonly byte[] Restore = new byte[] { 0x52, 0x45, 0x53, 0x54, 0x4f, 0x52, 0x45 };
        public static readonly byte[] Scan = new byte[] { 0x53, 0x43, 0x41, 0x4e };
        public static readonly byte[] Sort = new byte[] { 0x53, 0x4f, 0x52, 0x54 };
        public static readonly byte[] Ttl = new byte[] { 0x54, 0x54, 0x4c };
        public static readonly byte[] Type = new byte[] { 0x54, 0x59, 0x50, 0x45 };
        //list
        public static readonly byte[] Blpop = new byte[] { 0x42, 0x4c, 0x50, 0x4f, 0x50 };
        public static readonly byte[] Brpop = new byte[] { 0x42, 0x52, 0x50, 0x4f, 0x50 };
        public static readonly byte[] Brpoplpush = new byte[] { 0x42, 0x52, 0x50, 0x4f, 0x50, 0x4c, 0x50, 0x55, 0x53, 0x48 };
        public static readonly byte[] Lindex = new byte[] { 0x4c, 0x49, 0x4e, 0x44, 0x45, 0x58 };
        public static readonly byte[] Linsert = new byte[] { 0x4c, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54 };
        public static readonly byte[] Llen = new byte[] { 0x4c, 0x4c, 0x45, 0x4e };
        public static readonly byte[] Lpop = new byte[] { 0x4c, 0x50, 0x4f, 0x50 };
        public static readonly byte[] Lpush = new byte[] { 0x4c, 0x50, 0x55, 0x53, 0x48 };
        public static readonly byte[] Lpushx = new byte[] { 0x4c, 0x50, 0x55, 0x53, 0x48, 0x58 };
        public static readonly byte[] Lrange = new byte[] { 0x4c, 0x52, 0x41, 0x4e, 0x47, 0x45 };
        public static readonly byte[] Lrem = new byte[] { 0x4c, 0x52, 0x45, 0x4d };
        public static readonly byte[] Lset = new byte[] { 0x4c, 0x53, 0x45, 0x54 };
        public static readonly byte[] Ltrim = new byte[] { 0x4c, 0x54, 0x52, 0x49, 0x4d };
        public static readonly byte[] Rpop = new byte[] { 0x52, 0x50, 0x4f, 0x50 };
        public static readonly byte[] Rpoplpush = new byte[] { 0x52, 0x50, 0x4f, 0x50, 0x4c, 0x50, 0x55, 0x53, 0x48 };
        public static readonly byte[] Rpush = new byte[] { 0x52, 0x50, 0x55, 0x53, 0x48 };
        public static readonly byte[] Rpushx = new byte[] { 0x52, 0x50, 0x55, 0x53, 0x48, 0x58 };
        //server
        public static readonly byte[] Bgrewriteaof = new byte[] { 0x42, 0x47, 0x52, 0x45, 0x57, 0x52, 0x49, 0x54, 0x45, 0x41, 0x4f, 0x46 };
        public static readonly byte[] Bgsave = new byte[] { 0x42, 0x47, 0x53, 0x41, 0x56, 0x45 };
        public static readonly byte[] Client = new byte[] { 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54 };
        public static readonly byte[] Getname = new byte[] { 0x47, 0x45, 0x54, 0x4e, 0x41, 0x4d, 0x45 };
        public static readonly byte[] Kill = new byte[] { 0x4b, 0x49, 0x4c, 0x4c };
        public static readonly byte[] List = new byte[] { 0x4c, 0x49, 0x53, 0x54 };
        public static readonly byte[] Setname = new byte[] { 0x53, 0x45, 0x54, 0x4e, 0x41, 0x4d, 0x45 };
        public static readonly byte[] Config = new byte[] { 0x43, 0x4f, 0x4e, 0x46, 0x49, 0x47 };
        public static readonly byte[] Resetstat = new byte[] { 0x52, 0x45, 0x53, 0x45, 0x54, 0x53, 0x54, 0x41, 0x54 };
        public static readonly byte[] Rewrite = new byte[] { 0x52, 0x45, 0x57, 0x52, 0x49, 0x54, 0x45 };
        public static readonly byte[] Dbsize = new byte[] { 0x44, 0x42, 0x53, 0x49, 0x5a, 0x45 };
        public static readonly byte[] Debug = new byte[] { 0x44, 0x45, 0x42, 0x55, 0x47 };
        public static readonly byte[] Segfault = new byte[] { 0x53, 0x45, 0x47, 0x46, 0x41, 0x55, 0x4c, 0x54 };
        public static readonly byte[] Flushall = new byte[] { 0x46, 0x4c, 0x55, 0x53, 0x48, 0x41, 0x4c, 0x4c };
        public static readonly byte[] Flushdb = new byte[] { 0x46, 0x4c, 0x55, 0x53, 0x48, 0x44, 0x42 };
        public static readonly byte[] Info = new byte[] { 0x49, 0x4e, 0x46, 0x4f };
        public static readonly byte[] Lastsave = new byte[] { 0x4c, 0x41, 0x53, 0x54, 0x53, 0x41, 0x56, 0x45 };
        public static readonly byte[] Monitor = new byte[] { 0x4d, 0x4f, 0x4e, 0x49, 0x54, 0x4f, 0x52 };
        public static readonly byte[] Save = new byte[] { 0x53, 0x41, 0x56, 0x45 };
        public static readonly byte[] Shutdown = new byte[] { 0x53, 0x48, 0x55, 0x54, 0x44, 0x4f, 0x57, 0x4e };
        public static readonly byte[] Slaveof = new byte[] { 0x53, 0x4c, 0x41, 0x56, 0x45, 0x4f, 0x46 };
        public static readonly byte[] Slowlog = new byte[] { 0x53, 0x4c, 0x4f, 0x57, 0x4c, 0x4f, 0x47 };
        public static readonly byte[] Sync = new byte[] { 0x53, 0x59, 0x4e, 0x43 };
        public static readonly byte[] Time = new byte[] { 0x54, 0x49, 0x4d, 0x45 };
        //sorted_set
        public static readonly byte[] Zadd = new byte[] { 0x5a, 0x41, 0x44, 0x44 };
        public static readonly byte[] Zcard = new byte[] { 0x5a, 0x43, 0x41, 0x52, 0x44 };
        public static readonly byte[] Zcount = new byte[] { 0x5a, 0x43, 0x4f, 0x55, 0x4e, 0x54 };
        public static readonly byte[] Zincrby = new byte[] { 0x5a, 0x49, 0x4e, 0x43, 0x52, 0x42, 0x59 };
        public static readonly byte[] Zinterstore = new byte[] { 0x5a, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x53, 0x54, 0x4f, 0x52, 0x45 };
        public static readonly byte[] Zrange = new byte[] { 0x5a, 0x52, 0x41, 0x4e, 0x47, 0x45 };
        public static readonly byte[] Zrangebyscore = new byte[] { 0x5a, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x42, 0x59, 0x53, 0x43, 0x4f, 0x52, 0x45 };
        public static readonly byte[] Zrank = new byte[] { 0x5a, 0x52, 0x41, 0x4e, 0x4b };
        public static readonly byte[] Zrem = new byte[] { 0x5a, 0x52, 0x45, 0x4d };
        public static readonly byte[] Zremrangebyrank = new byte[] { 0x5a, 0x52, 0x45, 0x4d, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x42, 0x59, 0x52, 0x41, 0x4e, 0x4b };
        public static readonly byte[] Zremrangebyscore = new byte[] { 0x5a, 0x52, 0x45, 0x4d, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x42, 0x59, 0x53, 0x43, 0x4f, 0x52, 0x45 };
        public static readonly byte[] Zrevrange = new byte[] { 0x5a, 0x52, 0x45, 0x56, 0x52, 0x41, 0x4e, 0x47, 0x45 };
        public static readonly byte[] Zrevrangebyscore = new byte[] { 0x5a, 0x52, 0x45, 0x56, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x42, 0x59, 0x53, 0x43, 0x4f, 0x52, 0x45 };
        public static readonly byte[] Zrevrank = new byte[] { 0x5a, 0x52, 0x45, 0x56, 0x52, 0x41, 0x4e, 0x4b };
        public static readonly byte[] Zscan = new byte[] { 0x5a, 0x53, 0x43, 0x41, 0x4e };
        public static readonly byte[] Zscore = new byte[] { 0x5a, 0x53, 0x43, 0x4f, 0x52, 0x45 };
        public static readonly byte[] Zunionstore = new byte[] { 0x5a, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x53, 0x54, 0x4f, 0x52, 0x45 };
        //connection
        public static readonly byte[] Auth = new byte[] { 0x41, 0x55, 0x54, 0x48 };
        public static readonly byte[] Echo = new byte[] { 0x45, 0x43, 0x48, 0x4f };
        public static readonly byte[] Ping = new byte[] { 0x50, 0x49, 0x4e, 0x47 };
        public static readonly byte[] Quit = new byte[] { 0x51, 0x55, 0x49, 0x54 };
        public static readonly byte[] Select = new byte[] { 0x53, 0x45, 0x4c, 0x45, 0x43, 0x54 };
        //scripting
        public static readonly byte[] Eval = new byte[] { 0x45, 0x56, 0x41, 0x4c };
        public static readonly byte[] Evalsha = new byte[] { 0x45, 0x56, 0x41, 0x4c, 0x53, 0x48, 0x41 };
        public static readonly byte[] Script = new byte[] { 0x53, 0x43, 0x52, 0x49, 0x50, 0x54 };
        public static readonly byte[] Flush = new byte[] { 0x46, 0x4c, 0x55, 0x53, 0x48 };
        public static readonly byte[] Load = new byte[] { 0x4c, 0x4f, 0x41, 0x44 };
        //pubsub
        public static readonly byte[] Psubscribe = new byte[] { 0x50, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45 };
        public static readonly byte[] Publish = new byte[] { 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48 };
        public static readonly byte[] Pubsub = new byte[] { 0x50, 0x55, 0x42, 0x53, 0x55, 0x42 };
        public static readonly byte[] Punsubscribe = new byte[] { 0x50, 0x55, 0x4e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45 };
        public static readonly byte[] Subscribe = new byte[] { 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45 };
        public static readonly byte[] Unsubscribe = new byte[] { 0x55, 0x4e, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45 };
    }
}
